{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the BudgetWise application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "userName": {
          "type": "string",
          "description": "The user's username"
        }
      },
      "required": [
        "id",
        "email",
        "userName"
      ]
    },
    "Expense": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Expense",
      "type": "object",
      "description": "Represents an expense record.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the expense."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Expense)"
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N Expense)"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the expense."
        },
        "date": {
          "type": "string",
          "description": "Date of the expense.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "Description of the expense."
        }
      },
      "required": [
        "id",
        "userId",
        "categoryId",
        "amount",
        "date"
      ]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a spending category.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the category."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Category)"
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "description": {
          "type": "string",
          "description": "Description of the category."
        }
      },
      "required": [
        "id",
        "userId",
        "name"
      ]
    },
    "Budget": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Budget",
      "type": "object",
      "description": "Represents a monthly budget for a category.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the budget."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Budget)"
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N Budget)"
        },
        "month": {
          "type": "string",
          "description": "The month this budget applies to (format YYYY-MM)."
        },
        "amount": {
          "type": "number",
          "description": "The budget amount for the month."
        }
      },
      "required": [
        "id",
        "userId",
        "categoryId",
        "month",
        "amount"
      ]
    },
    "BudgetAdvice": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BudgetAdvice",
      "type": "object",
      "description": "Represents personalized budget advice generated by the AI.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the budget advice."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N BudgetAdvice)"
        },
        "categoryId": {
          "type": "string",
          "description": "Reference to Category. (Relationship: Category 1:N BudgetAdvice)"
        },
        "advice": {
          "type": "string",
          "description": "The AI-generated budget advice."
        },
        "date": {
          "type": "string",
          "description": "Date when the advice was generated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "categoryId",
        "advice",
        "date"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.  This collection serves as the root for all user-specific data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, matching the Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/categories/{categoryId}",
        "definition": {
          "entityName": "Category",
          "schema": {
            "$ref": "#/backend/entities/Category"
          },
          "description": "Stores categories created by the user. Accessible only to the user. The 'userId' field in each document must match the document ID of the user document to which it belongs.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "categoryId",
              "description": "The unique identifier for the category."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/expenses/{expenseId}",
        "definition": {
          "entityName": "Expense",
          "schema": {
            "$ref": "#/backend/entities/Expense"
          },
          "description": "Stores expense records created by the user. Accessible only to the user. The 'userId' field in each document must match the document ID of the user document to which it belongs.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "expenseId",
              "description": "The unique identifier for the expense."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/budgets/{budgetId}",
        "definition": {
          "entityName": "Budget",
          "schema": {
            "$ref": "#/backend/entities/Budget"
          },
          "description": "Stores budget records created by the user. Accessible only to the user. The 'userId' field in each document must match the document ID of the user document to which it belongs.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "budgetId",
              "description": "The unique identifier for the budget."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/budget_advice/{budgetAdviceId}",
        "definition": {
          "entityName": "BudgetAdvice",
          "schema": {
            "$ref": "#/backend/entities/BudgetAdvice"
          },
          "description": "Stores budget advice generated for the user. Accessible only to the user. The 'userId' field in each document must match the document ID of the user document to which it belongs.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "budgetAdviceId",
              "description": "The unique identifier for the budget advice."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure data isolation and simplified security rules by leveraging path-based ownership for user-specific data. Each user has their own dedicated collections for categories, expenses, budgets, and budget advice, enabling straightforward security rules based on `request.auth.uid`. This eliminates the need for complex `get()` calls in security rules, promoting authorization independence and facilitating atomic operations. All data related to a specific user is stored under the `/users/{userId}` path, guaranteeing that only the authenticated user can access their own data. This structure supports QAPs by ensuring that list operations are secure, as rules can simply check if `request.auth.uid == userId` to grant access to the user's resources. This approach adheres to the principle of segregation (homogeneous security posture) because each collection underneath a `user` has the same owner, therefore enabling simple and secure rules."
  }
}